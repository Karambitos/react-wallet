{"version":3,"file":"static/js/396.d41bfd20.chunk.js","mappings":"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","sources":["webpack://react-wallet/./src/components/Chart/Chart.module.scss?48b5","webpack://react-wallet/./src/components/Chart/Filter/Filter.module.scss?23ed","components/Chart/Filter/Filter.jsx","webpack://react-wallet/./src/components/Chart/StatisticsList/StatisticsList.module.scss?4c15","components/Chart/StatisticsList/StatisticsList.jsx","components/Chart/Chart.jsx","pages/Statistics.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Chart_wrapper__FxNAa\",\"mainWrapper\":\"Chart_mainWrapper__PJMcd\",\"title\":\"Chart_title__Uk+iI\",\"chart\":\"Chart_chart__DIzHn\",\"main\":\"Chart_main__oYmh+\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Filter_form__Tvf-S\"};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectMonth, selectYear } from 'redux/transactions/selectors';\nimport { updateMonth, updateYear } from 'redux/transactions/slice';\nimport { getSummaryController } from 'redux/transactions/operations';\nimport Selector from '../../Selector/Selector';\n\nimport scss from './Filter.module.scss';\n\nexport default function Filter() {\n  const month = useSelector(selectMonth);\n  const year = useSelector(selectYear);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getSummaryController({ month, year }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleMonthChange = event => {\n    dispatch(updateMonth(event));\n    dispatch(getSummaryController({ month: event, year: year }));\n  };\n\n  const handleYearChange = event => {\n    dispatch(updateYear(event));\n    dispatch(getSummaryController({ month: month, year: event }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  const styles = {\n    control: provided => ({\n      ...provided,\n      backgroundColor: 'transparent',\n      border: '1px solid #000',\n      borderRadius: '30px',\n      borderBottom: '1px solid green',\n\n      padding: '12px 20px',\n\n      minHeight: '32px',\n      fontSize: '16px',\n      fontFamily: 'Circe',\n      lineHeight: '24px',\n      fontWeight: '400',\n      color: '#000',\n    }),\n\n    placeholder: provided => ({\n      ...provided,\n      color: '#000',\n    }),\n    menu: provided => ({\n      ...provided,\n      background: 'rgba(0, 0, 0, 0.05)',\n      boxShadow: '0px 6px 15px rgba(0, 0, 0, 0.5)',\n      backdropFilter: 'blur(25px)',\n      borderRadius: '20px',\n      color: '#000',\n      fontSize: '16px',\n      overflow: 'hidden',\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      ':hover': { background: '#fff', color: '#000' },\n      ':active': { background: '#fff', color: '#000' },\n      ':focus': { background: '#fff', color: '#000' },\n    }),\n    singleValue: provided => ({\n      ...provided,\n      color: '#000',\n    }),\n    dropdownIndicator: provided => ({\n      ...provided,\n      padding: '0',\n      color: '#000',\n    }),\n    indicatorsContainer: provided => ({\n      ...provided,\n      padding: '0',\n      color: '#000',\n    }),\n    indicatorSeparator: provided => ({\n      ...provided,\n      display: 'none',\n    }),\n    input: provided => ({\n      ...provided,\n      padding: '0',\n      margin: '0',\n    }),\n    valueContainer: provided => ({\n      ...provided,\n      padding: '0',\n    }),\n  };\n\n  const months = [\n    { name: 'January' },\n    { name: 'February' },\n    { name: 'March' },\n    { name: 'April' },\n    { name: 'May' },\n    { name: 'June' },\n    { name: 'July' },\n    { name: 'August' },\n    { name: 'September' },\n    { name: 'October' },\n    { name: 'November' },\n    { name: 'December' },\n  ];\n\n  const years = [\n    { id: 2023, name: 2023 },\n    { id: 2022, name: 2022 },\n    { id: 2021, name: 2021 },\n    { id: 2020, name: 2020 },\n    { id: 2019, name: 2019 },\n  ];\n  return (\n    <form className={scss.form} onSubmit={handleSubmit}>\n      <Selector\n        options={years}\n        onSelect={handleYearChange}\n        styles={styles}\n        placeholder={year.toString()}\n      />\n      <Selector\n        options={months}\n        onSelect={handleMonthChange}\n        styles={styles}\n        placeholder={months[month - 1].name}\n      />\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"StatisticsList_label__jk7Gy\",\"list\":\"StatisticsList_list__jgx8A\",\"marker\":\"StatisticsList_marker__pt0Ed\",\"total\":\"StatisticsList_total__pE73F\",\"red\":\"StatisticsList_red__FJrFD\",\"green\":\"StatisticsList_green__1lcZ7\"};","import { useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './StatisticsList.module.scss';\n\nexport default function StatisticsList({ backgroundColor }) {\n  const { categories, expenseSummary, incomeSummary } = useSelector(\n    state => state.transactions.categoriesSummary\n  );\n\n  const sumRef = value => {\n    const formattedNum = Math.abs(value).toFixed(2);\n    const formatter = new Intl.NumberFormat('en-US');\n    const formattedString = formatter.format(formattedNum);\n    const replacedString = formattedString.replaceAll(',', ' ');\n    const decimalPart = formattedNum.split('.')[1] || '00';\n    return `${replacedString}.${decimalPart}`;\n  };\n  return (\n    <>\n      <div className={styles.label}>\n        <span>Category</span>\n        <span>Sum</span>\n      </div>\n      <ul className={styles.list}>\n        {categories\n          .filter(item => item.type !== 'INCOME')\n          .map(({ name, total, type }, index) => {\n            return (\n              <li key={uuidv4()}>\n                <span>\n                  <span\n                    className={styles.marker}\n                    style={{ backgroundColor: backgroundColor[index] }}\n                  ></span>\n                  {name}\n                </span>\n                <span>{sumRef(total)}</span>\n              </li>\n            );\n          })}\n      </ul>\n      <div className={styles.total}>\n        <span>Expenses:</span>\n        <span className={styles.red}> {sumRef(expenseSummary)}</span>\n      </div>\n      <div className={styles.total}>\n        <span>Income:</span>\n        <span className={styles.green}>{sumRef(incomeSummary)}</span>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport styles from './Chart.module.scss';\nimport Filter from './Filter/Filter';\nimport StatisticsList from './StatisticsList/StatisticsList';\nimport {\n  selectAllCategories,\n  selectExpenseSummary,\n  selectIncomeSummary,\n} from 'redux/transactions/selectors';\n\nChartJS.register(ArcElement, Tooltip);\n\nexport default function Chart() {\n  const categoriesSummary = useSelector(selectAllCategories);\n  const incomeSummary = useSelector(selectIncomeSummary);\n  const expenseSummary = useSelector(selectExpenseSummary);\n\n  function formattedValue(value) {\n    const formattedNum = Math.abs(value).toFixed(2);\n    const formatter = new Intl.NumberFormat('en-US');\n    const formattedString = formatter.format(formattedNum);\n    const replacedString = formattedString.replaceAll(',', ' ');\n    const decimalPart = formattedNum.split('.')[1] || '00';\n    const isNegative = value.toString().includes('-') ? '-' : '';\n    return `₴ ${isNegative}${replacedString}.${decimalPart}`;\n  }\n\n  function countUserBalance() {\n    return formattedValue(expenseSummary + incomeSummary);\n  }\n\n  const doughnutKey = `doughnut-${countUserBalance()}`;\n\n  const getValues = (array, value) => {\n    // return array.filter(item => item.type !== 'INCOME').map(obj => obj[value]);\n    return array.map(obj => obj[value]);\n  };\n\n  const backgroundColor = [\n    'rgba(254, 208, 87, 1)',\n    'rgba(255, 216, 208, 1)',\n    'rgba(253, 148, 152, 1)',\n    'rgba(197, 186, 255, 1)',\n    'rgba(110, 120, 232, 1)',\n    'rgba(74, 86, 226, 1)',\n    'rgba(129, 225, 255, 1)',\n    'rgba(36, 204, 167, 1)',\n    'rgb(25, 255, 0, 1)',\n    'rgba(221, 55, 194, 0.8)',\n    'rgba(66, 5, 142, 0.8)',\n    'rgba(15, 102, 255, 0.2)',\n  ];\n\n  const dataChart = {\n    labels: getValues(categoriesSummary, 'name'),\n    datasets: [\n      {\n        data: getValues(categoriesSummary, 'total'),\n        backgroundColor: backgroundColor,\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  const optionsChart = {\n    cutout: 105,\n  };\n\n  return (\n    <div className={styles.mainWrapper}>\n      <h2 className={styles.title}>Statistics</h2>\n      <div className={styles.wrapper}>\n        <div className={styles.chart}>\n          <Doughnut\n            key={doughnutKey}\n            data={dataChart}\n            options={optionsChart}\n            plugins={[\n              {\n                beforeDraw(chart) {\n                  const { width } = chart;\n                  const { height } = chart;\n                  const { ctx } = chart;\n                  ctx.restore();\n                  ctx.font = 'bold 18px Circe';\n                  ctx.textBaseline = 'middle';\n                  const text = countUserBalance();\n                  const textX = (width - ctx.measureText(text).width) / 2;\n                  const textY = height / 2;\n                  ctx.fillText(text, textX, textY);\n                  ctx.save();\n                },\n              },\n            ]}\n          />\n        </div>\n        <div className={styles.main}>\n          <Filter />\n          <StatisticsList backgroundColor={backgroundColor} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Chart from 'components/Chart/Chart';\n\nconst Statistics = () => {\n  return <Chart />;\n};\n\nexport default Statistics;\n"],"names":["Filter","month","useSelector","selectMonth","year","selectYear","dispatch","useDispatch","useEffect","getSummaryController","styles","control","provided","backgroundColor","border","borderRadius","borderBottom","padding","minHeight","fontSize","fontFamily","lineHeight","fontWeight","color","placeholder","menu","background","boxShadow","backdropFilter","overflow","option","state","singleValue","dropdownIndicator","indicatorsContainer","indicatorSeparator","display","input","margin","valueContainer","months","name","className","scss","onSubmit","event","preventDefault","Selector","options","id","onSelect","updateYear","toString","updateMonth","StatisticsList","transactions","categoriesSummary","categories","expenseSummary","incomeSummary","sumRef","value","formattedNum","Math","abs","toFixed","replacedString","Intl","NumberFormat","format","replaceAll","decimalPart","split","filter","item","type","map","index","total","style","uuidv4","Chart","selectAllCategories","selectIncomeSummary","selectExpenseSummary","countUserBalance","isNegative","includes","formattedValue","doughnutKey","getValues","array","obj","dataChart","labels","datasets","data","borderWidth","cutout","plugins","beforeDraw","chart","width","height","ctx","restore","font","textBaseline","text","textX","measureText","textY","fillText","save","ChartJS","ArcElement","Tooltip"],"sourceRoot":""}